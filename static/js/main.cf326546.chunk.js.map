{"version":3,"sources":["Die.js","NumberField.js","App.js","index.js"],"names":["Die","props","divStyle","eyeNumber","shake","animation","className","style","src","alt","NumberField","number","startOverFlag","useState","isFlipped","setFlipped","isAnimated","setAnimated","onClick","App","eyes","setEyes","setShake","startOver","setStartOver","getRandomInt","max","Math","floor","random","eyeNumber1","eyeNumber2","setTimeout","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+JAoBeA,EApBH,SAACC,GAAW,IAIlBC,EAFGC,EAAoBF,EAApBE,UAWP,OANED,EALyBD,EAATG,MAKL,CAACC,UAAY,cAGb,CAACA,UAAY,QAIpB,qBAAKC,UAAY,MAAMC,MAASL,EAAUM,IAAG,oBAAiBL,EAAjB,QAAkCM,IAAM,SCqC9EC,EAhDK,SAACT,GAAW,IAO1BC,EANGS,EAAyBV,EAAzBU,OAAQC,EAAiBX,EAAjBW,cADc,EAEGC,oBAAS,GAFZ,mBAEtBC,EAFsB,KAEXC,EAFW,OAGKF,oBAAS,GAHd,mBAGtBG,EAHsB,KAGVC,EAHU,KAkBzBf,EAJCc,EAGIF,EACM,CAACT,UAAW,0BAGZ,CAACA,UAAW,iCANZ,CAACA,UAAY,QAUxBW,GAAcJ,GACXE,GACFC,GAAW,GAWd,OAEI,qBAAKT,UAAY,cAAcC,MAASL,EAAUgB,QAPpC,WAChBD,GAAY,GACZF,GAAYD,IAKV,SACI,sBAAKR,UAAY,SAAjB,cAA4BK,EAA5B,UCmCGQ,MAxEf,WAAgB,IAAD,EAEUN,oBAAS,GAFnB,gCAGWA,mBAAS,CAAC,EAAE,KAHvB,mBAGNO,EAHM,KAGAC,EAHA,OAIaR,oBAAS,GAJtB,mBAINT,EAJM,KAICkB,EAJD,OAKqBT,oBAAS,GAL9B,mBAKNU,EALM,KAKKC,EALL,KASb,SAASC,EAAaC,GACpB,OAAOC,KAAKC,MAAMD,KAAKE,SAAWF,KAAKC,MAAMF,IAqB/C,OAEM,sBAAKpB,UAAY,MAAjB,UACI,qBAAKA,UAAY,SAAjB,SACI,oBAAIA,UAAY,QAAhB,iCAGJ,sBAAKA,UAAY,cAAjB,UACI,sBAAKA,UAAY,wBAAjB,UACG,cAAC,EAAD,CAAaK,OAAU,EAAGC,cAAiBW,IAC3C,cAAC,EAAD,CAAaZ,OAAU,EAAGC,cAAiBW,IAC3C,cAAC,EAAD,CAAaZ,OAAU,EAAGC,cAAiBW,IAC3C,cAAC,EAAD,CAAaZ,OAAU,EAAGC,cAAiBW,IAC3C,cAAC,EAAD,CAAaZ,OAAU,EAAGC,cAAiBW,IAC3C,cAAC,EAAD,CAAaZ,OAAU,EAAGC,cAAiBW,IAC3C,cAAC,EAAD,CAAaZ,OAAU,EAAGC,cAAiBW,IAC3C,cAAC,EAAD,CAAaZ,OAAU,EAAGC,cAAiBW,IAC3C,cAAC,EAAD,CAAaZ,OAAU,EAAGC,cAAiBW,OAG9C,sBAAKjB,UAAY,iBAAjB,UACI,cAAC,EAAD,CAAKH,UAAaiB,EAAK,GAAIhB,MAASA,IACpC,cAAC,EAAD,CAAKD,UAAaiB,EAAK,GAAIhB,MAASA,UAG5C,sBAAKE,UAAY,mBAAjB,UACE,wBAAQA,UAAY,OAAOY,QA3CnB,WAChB,IAAMY,EAAaL,EAAa,GAAK,EAC/BM,EAAaN,EAAa,GAAK,EACrCH,GAAS,GACTU,YAAW,kBAAMV,GAAS,KAAQ,KAClCD,EAAQ,CAACS,EAAYC,KAsCb,4BAGA,wBAAQzB,UAAY,YAAYY,QAtCpB,WACpBM,GAAa,GACbQ,YAAW,kBAAMR,GAAa,KAAQ,MAoC9B,oCC9DdS,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,U","file":"static/js/main.cf326546.chunk.js","sourcesContent":["const Die = (props) => {\n\n  const {eyeNumber, shake} = props;\n\n  let divStyle;\n  \n  if (shake){\n    divStyle = {animation : 'shake 0.5s'};\n  }\n  else {\n    divStyle = {animation : 'null'};\n  }\n\n  return (\n        <img className = 'Die' style = {divStyle} src = {`images/die${eyeNumber}.png`} alt = 'die' />\n      \n  );\n}\n\n\nexport default Die;","import {useState} from 'react';\nimport './App.css';\n\nconst NumberField = (props) => {\n  const {number, startOverFlag} = props;\n  const [isFlipped, setFlipped] = useState(false);\n  const [isAnimated, setAnimated] = useState(false);\n  \n \n  \n  let divStyle;\n\n \n\n \n\n\n  if (!isAnimated){\n      divStyle = {animation : 'null'};\n  }\n  else if (isFlipped) {\n      divStyle = {animation: 'front-flip 1s forwards'};\n  }\n  else{\n      divStyle = {animation: 'back-flip 1s forwards reverse'};\n  }\n  \n  /* start over logic */\n  if (isAnimated && startOverFlag){\n     if (isFlipped){\n       setFlipped(false);\n     }\n  }\n\n\n\n  const handleClick = () => {\n      setAnimated(true);\n      setFlipped(!isFlipped);\n  }\n\n    return(\n        \n        <div className = 'NumberField' style = {divStyle} onClick = {handleClick}>\n            <div className = 'number'> {number} </div>\n        </div>\n        \n    );\n}\n\n\nexport default NumberField;","import {useState} from 'react';\nimport './App.css';\nimport Die from './Die.js';\nimport NumberField from './NumberField.js';\n\n\n\nfunction App() {\n  \n  const [flipped, set] = useState(false);\n  const [eyes, setEyes] = useState([2,3]);\n  const [shake, setShake] = useState(false);\n  const [startOver, setStartOver] = useState(false);\n\n\n    \n  function getRandomInt(max) {\n    return Math.floor(Math.random() * Math.floor(max));\n  }\n\n\n  const handleClick = () =>{\n      const eyeNumber1 = getRandomInt(6) + 1;\n      const eyeNumber2 = getRandomInt(6) + 1;\n      setShake(true);\n      setTimeout(() => setShake(false), 500);\n      setEyes([eyeNumber1, eyeNumber2]);   \n  }\n\n  const handleStartOver = () => {\n      setStartOver(true);\n      setTimeout(() => setStartOver(false), 500);\n\n  }\n\n\n\n\n  return (\n    \n        <div className = 'App'>\n            <div className = 'Header'>\n                <h1 className = 'title'> Truls Dice Game </h1> \n            </div>\n\n            <div className = 'Play-ground'>\n                <div className = 'NumberField-container'>\n                   <NumberField number = {1} startOverFlag = {startOver} />\n                   <NumberField number = {2} startOverFlag = {startOver}/>\n                   <NumberField number = {3} startOverFlag = {startOver}/>\n                   <NumberField number = {4} startOverFlag = {startOver}/>\n                   <NumberField number = {5} startOverFlag = {startOver}/>\n                   <NumberField number = {6} startOverFlag = {startOver}/>\n                   <NumberField number = {7} startOverFlag = {startOver}/>\n                   <NumberField number = {8} startOverFlag = {startOver}/>\n                   <NumberField number = {9} startOverFlag = {startOver}/>\n                </div>\n                \n                <div className = 'Dice-container'>\n                    <Die eyeNumber = {eyes[0]} shake = {shake}/>\n                    <Die eyeNumber = {eyes[1]} shake = {shake}/>\n                </div>\n            </div>\n            <div className = 'button-container'>\n              <button className = 'roll' onClick = {handleClick}>\n                  Roll Dice »\n              </button>\n              <button className = 'startover' onClick = {handleStartOver}>\n                Start Over »\n              </button>\n            </div>\n        </div>\n    \n  );\n}\n\n\n\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n\n"],"sourceRoot":""}